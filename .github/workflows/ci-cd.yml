# .github/workflows/ci-cd.yml

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Docker Image Tag
        id: set_tag
        run: |
          if [ "${{ github.ref_name }}" == "main" ]; then
            TAG="main"
          else
            TAG="dev"
          fi
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      - name: Build and Push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/oneday-onestreak:${{ steps.set_tag.outputs.tag }}
          file: Dockerfile.prod

  deploy:
    needs: build_and_push
    runs-on: ubuntu-latest

    steps:
      - name: Copy docker-compose.prod.yml to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.prod.yml"
          target: "/home/ec2-user/oneday-onestreak/"

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          env:
            TAG: ${{ steps.set_tag.outputs.tag }}
          script: |
            APP_DIR="/home/ec2-user/oneday-onestreak"
            if [ ! -d "$APP_DIR" ]; then
              mkdir -p "$APP_DIR"
            fi
            cd "$APP_DIR"
            
            IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/oneday-onestreak:$TAG

            echo ">>> DockerHub 로그인"
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}

            echo ">>> 최신 이미지 Pull ($IMAGE)"
            docker pull $IMAGE

            echo ">>> 컨테이너 재시작 (docker-compose)"
            docker-compose -f docker-compose.prod.yml up -d --force-recreate
