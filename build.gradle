plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.diffplug.spotless' version '7.0.3'
}

group = 'com.odos'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

spotless {
	java {
		// import 순서 정의
		importOrder(
				"java",
				"javax",
				"lombok",
				"org.springframework",
				"",
				"\\#",
				"org.junit",
				"\\#org.junit",
				"com.guide",
				"\\#com.guide"
		)
		// 사용하지 않는 import 제거
		removeUnusedImports()
		// 구글 자바 포맷 적용
		googleJavaFormat()

		// 공백 제거
		trimTrailingWhitespace()
		// 끝부분 New Line 처리
		endWithNewline()
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.register("updateGitHooks", Copy) {
	from "scripts/pre-commit"
	into ".git/hooks"
}
tasks.register("executableGitHooks", Exec) {
	commandLine "chmod", "ug+x", ".git/hooks/pre-commit"
	dependsOn(updateGitHooks)
	onlyIf {
		file("${projectDir}/.git/hooks/pre-commit").exists()
	}
}

compileJava.dependsOn(executableGitHooks)
